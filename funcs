#!/bin/sh

# Some custom functions, and also the aliases for make them shorten when using.
# Because the functions is self-defined, their aliases should be kept here, not
# in the ~/.aliases file.

# Open the ebook from command line using zathura, this also make za an alias to
# zathura.
# Usage:
#   za [file_name]
# If file_name is not provided, simply open zathura.
za() {
  if [ $# -eq 0 ]; then
    (zathura &)
  else
    (zathura "$1" &)
  fi
}

# Add, commit and push in single call. For lazy people.
# Shouldn't use this on serious project. It's would pollute your git history!
lazygit() {
  if [ $# -eq 0 ]; then # Check for commit message
    echo "Need a commit message"
    return 1
  fi
  git add .
  git commit -a -m "$*"
  git push
}

alias lg="lazygit" # And even more lazy

# Some common alias for switching git branch, memo as gb (git branch)
alias gbm='git checkout master'
alias gbt='git checkout test'
alias gbu='git checkout uat'
# unalias gbs # I don't use git bisect yet
alias gbs='git checkout staging'

# Cache the current branch to allow fast switching later.
gb_cache(){
  current_dir="$PWD"
  cd "$(git rev-parse --show-toplevel)" || exit 1

  # first, go to the top level git dir
  git branch | grep '* ' | tr -d '* ' > .git/working_branch

  cd "$current_dir" || exit 1
}
alias gbc=gb_cache

gb_work(){
  current_dir="$PWD"
  cd "$(git rev-parse --show-toplevel)" || exit 1
  git checkout "$( cat .git/working_branch)"
  cd "$current_dir" || exit 1
}

# Switch to the working branch
alias gbw=gb_work

fancy_echo(){
    echo "========================================"
    echo "- $*"
    echo "========================================"
}

# Update software
update-software() {

  #  Ubuntu
  if command -v apt-get >/dev/null 2>&1; then
    fancy_echo "Update software for Ubuntu"
    sudo apt update
    sudo apt full-upgrade -y
    sudo apt autoremove -y
  fi

  #  Centos
  if command -v yum >/dev/null 2>&1; then
    fancy_echo "Update software for Centos"
    sudo yum update -y
  fi

  if command -v brew >/dev/null 2>&1; then
    fancy_echo "Update software installed by homebrew"
    brew update
    brew upgrade
  fi

  #  Vim
  fancy_echo "Vim plugins"
  # Execute vim-plug upgrade, then update all plugins
  vim -c "PlugUpgrade" -c "qa!"
  vim -c "PlugUpdate" -c "qa!"
  vim -c "UpdateRemotePlugins" -c "qa!"
}

pwdd(){
  basename "$PWD"
}

dkpg() {
  if command -v podman >/dev/null 2>&1; then
    cmd=podman
  else
    cmd=docker
  fi

  echo "> Starting postgres container using $cmd"
  $cmd run --rm -d --name dkpg -e POSTGRES_PASSWORD=123 -p 5432:5432 postgres
}


dkmy() {
  if command -v podman >/dev/null 2>&1; then
    cmd=podman
  else
    cmd=docker
  fi

  echo "> Starting mysql container using $cmd"
  $cmd run --rm -d --name dkmy -e MYSQL_ROOT_PASSWORD=123 -p 3306:3306 mysql
}

