" Auto install on the first time if there no plug.vim found
" ---------------------------------------------------------
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

" Enable gnome-terminal full color
set t_Co=256

" List of plugin
" --------------
call plug#begin()
Plug 'Chiel92/vim-autoformat'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'chase/vim-ansible-yaml'
Plug 'flazz/vim-colorschemes'
Plug 'ingydotnet/yaml-vim'
Plug 'plasticboy/vim-markdown'
Plug 'raimondi/delimitmate'
Plug 'ryanoasis/vim-devicons'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'tommcdo/vim-exchange'
Plug 'tpope/vim-liquid'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'mattn/emmet-vim'


" For working with git
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" Show mark
Plug 'kshenoy/vim-signature'

" Fuzzy file finder
Plug 'ctrlpvim/ctrlp.vim'
call plug#end()

" Avoid using the Escape key
inoremap jk <ESC>
vnoremap jk <ESC>


" Use space as leader key, it's easy to touch
let mapleader="\<SPACE>"


" Quickly open vimrc and apply change
nnoremap <leader>es :tabedit $MYVIMRC<CR>
nnoremap <leader>as :so $MYVIMRC<CR>


" For NERDTree
"-------------
" Shortcut to quickly open the NerdTree panel
nnoremap <c-f12> :NERDTreeToggle<CR>
" And here for quickly reveal the location of opened buffer.
nnoremap <c-s-f12> :NERDTreeFind<CR>

" NERDTress File highlighting
function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
    exec 'autocmd FileType nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
    exec 'autocmd FileType nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
endfunction

au VimEnter * call NERDTreeHighlightFile('jade', 'green', 'none', 'green', 'white')
au VimEnter * call NERDTreeHighlightFile('ini', '100', 'none', 'Yellow4', 'white')
au VimEnter * call NERDTreeHighlightFile('py', '100', 'none', 'Yellow4', 'white')
au VimEnter * call NERDTreeHighlightFile('md', '19', 'none', '#3366FF', 'white')
au VimEnter * call NERDTreeHighlightFile('yml', '100', 'none', 'Yellow4', 'white')
au VimEnter * call NERDTreeHighlightFile('config', '100', 'none', 'Yellow4', 'white')
au VimEnter * call NERDTreeHighlightFile('conf', '100', 'none', 'Yellow4', 'white')
au VimEnter * call NERDTreeHighlightFile('json', '100', 'none', 'Yellow4', 'white')
au VimEnter * call NERDTreeHighlightFile('html', '100', 'none', 'Yellow4', 'white')
au VimEnter * call NERDTreeHighlightFile('styl', '19', 'none', 'cyan', 'white')
au VimEnter * call NERDTreeHighlightFile('css', '19', 'none', 'cyan', 'white')
au VimEnter * call NERDTreeHighlightFile('coffee', 'Red', 'none', 'red', 'white')
au VimEnter * call NERDTreeHighlightFile('js', 'Red', 'none', '#ffa500', 'white')
au VimEnter * call NERDTreeHighlightFile('rb', 'Red', 'none', '#ffa500', 'white')
au VimEnter * call NERDTreeHighlightFile('php', 'Magenta', 'none', '#ff00ff', 'white')


"Some custom setting that I wrote myself
set number nocompatible
set expandtab tabstop=4 softtabstop=4 shiftwidth=4
set ignorecase smartcase incsearch hls
set textwidth=79
set cc=80
set nospell spelllang=en_us
set encoding=utf8
set cursorline
set nofoldenable
syntax on
filetype plugin indent on

" Allow airline use powerline fonts
let g:airline_powerline_fonts=1


" Insert an blank line below or above the current line in normal mode
nnoremap <leader>o o<ESC>k
nnoremap <leader>O O<ESC>j


" Toggle highlight search
nnoremap <leader>n :set hls!<CR>

" Toggle spelling
nnoremap <leader>s :set spell!<CR>

" Toggle foldenable
nnoremap <leader>f :set foldenable!<CR>


" Quickly paste from clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P

" And quickly copy to clipboard also
nnoremap <leader>y "+y
nnoremap <leader>yy "+yy
vnoremap <leader>y "+y

" Make Y copy to end the line like the D command
nnoremap Y y$

" Auto remove trailing white space on saving file
" -----------------------------------------------
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()


" Auto format on save
" au BufWrite * :Autoformat

" Insert a second level or first level header line below the current line in
" normal mode
"----------------------------------------------------------------------------
nnoremap <leader>l yypVr-
nnoremap <leader>L yypVr=

" Use markdown as default, actually, I'm still not use vim heavily for other
" languages, not yet.
au BufNewFile,BufRead *.txt  set ft=markdown


" Custom theme
colo hemisu

" Delete comment character when joining comnmented lines
if v:version > 703 || v:version == 703 && has("patch541")
  set formatoptions+=j
endif

" Reload unchanged files automatically.
set autoread
