" Someone said that this should be the first line in thew vimrc,
" because this can change the other setting behavior as a side effect.
set number nocompatible

" Auto install on the first time if there no plug.vim found
" ---------------------------------------------------------
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

" Enable gnome-terminal full color
set t_Co=256

" This script defines list of the plugins will be managed by plug.vim
source ~/.vim/custom/plugins.vim

" This script have come custom for the NERDTree plugin.
" Includes:
" - Shortcut to open NERDTree panel
" - Shortcut to reveal current buffer location on disk
" - Command to highlight by file extension
source ~/.vim/custom/nerdtree.vim

" Avoid using the Escape key
inoremap jk <ESC>
vnoremap jk <ESC>


" Use space as leader key, it's easy to touch
let mapleader="\<SPACE>"


" Quickly open vimrc and apply change
nnoremap <leader>es :tabedit $MYVIMRC<CR>
nnoremap <leader>as :so $MYVIMRC<CR>


"Some custom setting that I wrote myself
set expandtab tabstop=4 softtabstop=4 shiftwidth=4
set ignorecase smartcase incsearch hls
set textwidth=79
set cc=80
set nospell spelllang=en_us
set encoding=utf8
set cursorline
set nofoldenable
syntax on
filetype plugin indent on

" Allow airline use powerline fonts
let g:airline_powerline_fonts=1

" Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1

" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

" Insert an blank line below or above the current line in normal mode
nnoremap <leader>o o<ESC>k
nnoremap <leader>O O<ESC>j


" Toggle highlight search
nnoremap <leader>n :set hls!<CR>

" Toggle spelling
nnoremap <leader>s :set spell!<CR>

" Toggle foldenable
nnoremap <leader>f :set foldenable!<CR>


" Quickly paste from clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P

" And quickly copy to clipboard also
nnoremap <leader>y "+y
nnoremap <leader>yy "+yy
vnoremap <leader>y "+y

" Make Y copy to end the line like the D command
nnoremap Y y$

" Auto remove trailing white space on saving file
" -----------------------------------------------
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()


" Auto format on save
" au BufWrite * :Autoformat

" Insert a second level or first level header line below the current line in
" normal mode
"----------------------------------------------------------------------------
nnoremap <leader>l yypVr-
nnoremap <leader>L yypVr=

" Use markdown as default, actually, I'm still not use vim heavily for other
" languages, not yet.
au BufNewFile,BufRead *.txt  set ft=markdown


" Custom theme
colo hemisu

" Delete comment character when joining comnmented lines
if v:version > 703 || v:version == 703 && has("patch541")
  set formatoptions+=j
endif

" Reload unchanged files automatically.
set autoread

" Quickly format the paregraph, and also a way to avoid enter Ex-mode
nnoremap gQ gqap

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)


" Some short term settings that can be change in future work
source ~/.vim/custom/on_working.vim


let g:ctrlp_cmd = 'CtrlPLastMode'
let g:ctrlp_extensions = ['buffertag','tag', 'line', 'dir']
